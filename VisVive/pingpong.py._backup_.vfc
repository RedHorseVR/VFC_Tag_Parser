;  IRL FlowCode Version: Version 10.0
;  c1995-2015: Visual Flow Coder by 2LResearch
;
;  File Name : E:\Users\luisr\OneDrive\Desktop\VFC_Tag_Parser\VisVive\pingpong.py.vfc
;  File Date : 11:55:13 PM - 18:Mar:2025

event( import pygamed );// 
event( import sys );// 
event( import random );// 
set();//
set();//# Initialize pygame
process( pygame.init() );// 
set();//
set();//# Constants
set( (WIDTH, HEIGHT) = (800, 600) );// 
set( (PADDLE_WIDTH, PADDLE_HEIGHT) = (20, 100) );// 
set( BALL_SIZE = 15 );// 
set( WHITE = (255, 255, 255) );// 
set( BLACK = (0, 0, 0) );// 
set( FPS = 60 );// 
set( PADDLE_SPEED = 8 );// 
set( BALL_SPEED_X = 7 );// 
set( BALL_SPEED_Y = 7 );// 
set();//
set();//# Setup display
set( screen = pygame.display.set_mode((WIDTH, HEIGHT)) );// 
process( pygame.display.set_caption('Ping Pong') );// 
set( clock = pygame.time.Clock() );// 
set();//
set();//# Font for score
set( font = pygame.font.SysFont('Arial', 32) );// 
set();//
set();//# Game objects
set( player1 = pygame.Rect(50, HEIGHT // 2 - PADDLE_HEIGHT // 2, PADDLE_WIDTH, PADDLE_HEIGHT) );// 
set( player2 = pygame.Rect(WIDTH - 50 - PADDLE_WIDTH, HEIGHT // 2 - PADDLE_HEIGHT // 2, PADDLE_WIDTH, PADDLE_HEIGHT) );// 
set( ball = pygame.Rect(WIDTH // 2 - BALL_SIZE // 2, HEIGHT // 2 - BALL_SIZE // 2, BALL_SIZE, BALL_SIZE) );// 
set();//
set();//# Game variables
set( ball_speed_x = BALL_SPEED_X * random.choice((1, -1)) );// 
set( ball_speed_y = BALL_SPEED_Y * random.choice((1, -1)) );// 
set( player1_score = 0 );// 
set( player2_score = 0 );// 
set();//
set();//# Game loop
loop( while True: );// 
loop( for event in pygame.event.get(): );// 
branch( if event.type == pygame.QUIT: );// 
path(  );//
process( pygame.quit() );// 
process( sys.exit() );// 
bend(  );//
lend(  );//
set( keys = pygame.key.get_pressed() );// 
set();//# Player 1 (left paddle)
branch( if keys[pygame.K_w] and player1.top > 0: );// 
path(  );//
set( player1.y = PADDLE_SPEED );// 
bend(  );//
branch( if keys[pygame.K_s] and player1.bottom < HEIGHT: );// 
path(  );//
set( player1.y = PADDLE_SPEED );// 
bend(  );//
branch( if keys[pygame.K_UP] and player2.top > 0: );// 
path(  );//
set( player2.y = PADDLE_SPEED );// 
bend(  );//
branch( if keys[pygame.K_DOWN] and player2.bottom < HEIGHT: );// 
path(  );//
set( player2.y = PADDLE_SPEED );// 
bend(  );//
set( ball.x = ball_speed_x );// 
set( ball.y = ball_speed_y );// 
branch( if ball.top <= 0 or ball.bottom >= HEIGHT: );// 
path(  );//
set( ball_speed_y = -1 );// 
bend(  );//
branch( if ball.colliderect(player1) or ball.colliderect(player2): );// # Add a slight random angle to make gameplay more interesting
path(  );//
set( ball_speed_x = -1 );// # Keep speed within reasonable bounds
set( ball_speed_y = random.uniform(-1, 1) );// 
branch( if abs(ball_speed_y) > 10: );// 
path(  );//
set( ball_speed_y = 10 if ball_speed_y > 0 else -10 );// # Ball out of bounds - scoring
bend(  );//
bend(  );//
branch( if ball.left <= 0: );// 
path(  );//
set( player2_score = 1 );// 
set( ball.center = (WIDTH // 2, HEIGHT // 2) );// 
set( ball_speed_x = BALL_SPEED_X * random.choice((1, -1)) );// 
set( ball_speed_y = BALL_SPEED_Y * random.choice((1, -1)) );// 
bend(  );//
branch( if ball.right >= WIDTH: );// # Player 1 scores
path(  );//
set( player1_score = 1 );// # Reset ball
set( ball.center = (WIDTH // 2, HEIGHT // 2) );// 
set( ball_speed_x = BALL_SPEED_X * random.choice((1, -1)) );// 
set( ball_speed_y = BALL_SPEED_Y * random.choice((1, -1)) );// 
bend(  );//
set();//# Drawing
process( screen.fill(BLACK) );// 
set();//
set();//# Draw paddles and ball
process( pygame.draw.rect(screen, WHITE, player1) );// 
process( pygame.draw.rect(screen, WHITE, player2) );// 
process( pygame.draw.ellipse(screen, WHITE, ball) );// 
set();//
set();//# Draw center line
process( pygame.draw.aaline(screen, WHITE, (WIDTH // 2, 0), (WIDTH // 2, HEIGHT)) );// 
set();//
set();//# Draw scores
set( player1_text = font.render(str(player1_score), True, WHITE) );// 
set( player2_text = font.render(str(player2_score), True, WHITE) );// 
process( screen.blit(player1_text, (WIDTH // 4, 20)) );// 
process( screen.blit(player2_text, (3 * WIDTH // 4, 20)) );// 
set();//
set();//# Update display
process( pygame.display.flip() );// 
process( clock.tick(FPS) );// 
lend(  );//



;INSECTA EMBEDDED SESSION INFORMATION
; 255 16777215 65280 16777088 16711680 255 12632256 0 255 255 65535 65280 5439529
;    E:\Users\luisr\OneDrive\Desktop\VFC_Tag_Parser\VisVive\pingpong.py   #   .
; notepad.exe
;INSECTA EMBEDDED ALTSESSION INFORMATION
; 2925 288 902 1802 0 100   756   4294966693    python.key  0