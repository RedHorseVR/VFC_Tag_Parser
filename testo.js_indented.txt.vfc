input( function showLineInfo(message = "") {  );// <---------------!!!!    input |+++++++++++++ OPEN 
set(const e = new Error(););  // <---------------!!!!    ----->>>>  
set(const stack = e.stack.split("\n"););  // <---------------!!!!    ----->>>>  
set(const lineInfo = stack[2].trim(););  // <---------------!!!!    ----->>>>  
output(console.log(`${message} LINE Executing at: ${lineInfo}`););  // <---------------!!!!    ----->>>>  
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( async function getCredentials() {  );// <---------------!!!!    input--- |+++++++++++++ OPEN 
branch( try {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
set(const response = await fetch(addAPIKEY("/api/get-credentials"), { headers: { "Cache-Control": "no-cache" } }););  // <---------------!!!!    ----->>>>  
branch( if (!response.ok) {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
output(throw new Error("Network response was not ok"););  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
set(const text = await response.text(););  // <---------------!!!!    ----->>>>  
set(let data = JSON.parse(text););  // <---------------!!!!    ----->>>>  
set(let L = data.result.length;);  // <---------------!!!!    ----->>>>  
branch( if (data.result[L - 1].type === "BLANK") {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
end(return JSON.parse("[]"););  // <---------------!!!!    ----->>>>  
path( } else {  );// <---------------!!!!    path... |+++++++++++++ BRIDGE 
end(return data.result;);  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
path( } catch (error) {  );// <---------------!!!!    path... |+++++++++++++ BRIDGE 
output(console.info("EMPTY WALLET ON SERVER :", error););  // <---------------!!!!    ----->>>>  
end(return JSON.parse("[]"););  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( async function Confirmation(prompt, callback) {  );// <---------------!!!!    input--- |+++++++++++++ OPEN 
set(var result = confirm(prompt););  // <---------------!!!!    ----->>>>  
branch( if (result) {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
end(return callback(););  // <---------------!!!!    ----->>>>  
path( } else {  );// <---------------!!!!    path... |+++++++++++++ BRIDGE 
set(ReLoad(););  // <---------------!!!!    ----->>>>  
end(return;);  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( async function SaveJSONdata(USER_ID, ITEMS) {  );// <---------------!!!!    input--- |+++++++++++++ OPEN 
set(const payload = { userId: USER_ID, files: ITEMS };);  // <---------------!!!!    ----->>>>  
set(const saveResponse = await fetch(addAPIKEY("/api/save-credentials"), { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(payload) }););  // <---------------!!!!    ----->>>>  
branch( if (!saveResponse.ok) {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
output(throw new Error(`Save failed: ${saveResponse.status}`););  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
set(const result = await saveResponse.json(););  // <---------------!!!!    ----->>>>  
branch( if (!result.success) {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
output(throw new Error(result.message || "Save operation failed"););  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
end(return result.result;);  // <---------------!!!!    ----->>>>  
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( async function sendEmailData(userID, subject = "From AMW", reload = false) {  );// <---------------!!!!    input--- |+++++++++++++ OPEN 
end(var URI = addAPIKEY("/api/send-checked-credentials"););  // <---------------!!!!    ----->>>>  
set(URI += `&subject=${subject}`;);  // <---------------!!!!    ----->>>>  
set(var prompt = `Confirm emailing ${numChecked()} selected documents to ${userID}.`;);  // <---------------!!!!    ----->>>>  
set(var result = confirm(prompt););  // <---------------!!!!    ----->>>>  
branch( if (result) { );// <---------------!!!!    branch 
event();  // <---------------!!!!    ----->>>>  
path( } else {  );// <---------------!!!!    path... |+++++++++++++ OPEN 
end(return;);  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
branch( try {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
set(const response = await fetch(URI, { method: "GET" }););  // <---------------!!!!    ----->>>>  
set(const result = await response.json(););  // <---------------!!!!    ----->>>>  
output(alert("Credentials email sent"););  // <---------------!!!!    ----->>>>  
branch( if (reload) {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
set(ReLoad(););  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
path( } catch (error) {  );// <---------------!!!!    path... |+++++++++++++ BRIDGE 
end(console.error("Error sending email :", error););  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( function extractNumberAsText(inputString) {  );// <---------------!!!!    input |+++++++++++++ OPEN 
branch( if (!inputString) {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
end(return "";);  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
set(const matches = inputString.match(/\d+(\.\d+)?/););  // <---------------!!!!    ----->>>>  
branch( if (matches) {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
end(return Number(matches[0]).toString(););  // <---------------!!!!    ----->>>>  
path( } else {  );// <---------------!!!!    path... |+++++++++++++ BRIDGE 
end(return "";);  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( function popPage(page) {  );// <---------------!!!!    input |+++++++++++++ OPEN 
set(url = `${page}?userId=${USER_ID}&apikey=${APIKEY}`;);  // <---------------!!!!    ----->>>>  
set(window.open(url, "_blank"););  // <---------------!!!!    ----->>>>  
end(return false;);  // <---------------!!!!    ----->>>>  
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( function generateFolderName(email) {  );// <---------------!!!!    input |+++++++++++++ OPEN 
set(const invalidChars = /[<>:"/\\|?*\s]+/g;);  // <---------------!!!!    ----->>>>  
set(let sanitizedEmail = email.replace(invalidChars, "_"););  // <---------------!!!!    ----->>>>  
set(const timestamp = new Date().getTime(););  // <---------------!!!!    ----->>>>  
set(const uniqueFolderName = `${sanitizedEmail}`;);  // <---------------!!!!    ----->>>>  
end(return uniqueFolderName;);  // <---------------!!!!    ----->>>>  
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( function togglePopup(message) {  );// <---------------!!!!    input |+++++++++++++ OPEN 
set(var popup = document.getElementById("myPopup"););  // <---------------!!!!    ----->>>>  
set(popup.classList.toggle("show"););  // <---------------!!!!    ----->>>>  
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( function toggleHelp(ID) {  );// <---------------!!!!    input |+++++++++++++ OPEN 
output(alert("help toggle " + ID););  // <---------------!!!!    ----->>>>  
set(var popup = document.getElementById(ID););  // <---------------!!!!    ----->>>>  
set(popup.classList.toggle("show"););  // <---------------!!!!    ----->>>>  
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
set(let userData;);  // <---------------!!!!    ----->>>>  
input( async function getUserData(user = "") {  );// <---------------!!!!    input--- |+++++++++++++ OPEN 
set(var response;);  // <---------------!!!!    ----->>>>  
set(var url;);  // <---------------!!!!    ----->>>>  
branch( try {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
branch( if (user != "") {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
set(url = addAPIKEY(`/api/get-user?userId=${user}`););  // <---------------!!!!    ----->>>>  
path( } else {  );// <---------------!!!!    path... |+++++++++++++ BRIDGE 
set(url = addAPIKEY(`/api/get-user`););  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
set(response = await fetch(url););  // <---------------!!!!    ----->>>>  
set(const data = await response.json(););  // <---------------!!!!    ----->>>>  
set(userData = data.result;);  // <---------------!!!!    ----->>>>  
path( } catch (error) {  );// <---------------!!!!    path... |+++++++++++++ BRIDGE 
output(console.error("Error getUser profile:", error););  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
end(return userData;);  // <---------------!!!!    ----->>>>  
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( function Load(url) {  );// <---------------!!!!    input |+++++++++++++ OPEN 
set(var start_page = addAPIKEY(url););  // <---------------!!!!    ----->>>>  
output(console.error("START PAGE SET TO ", start_page););  // <---------------!!!!    ----->>>>  
set(location.replace(start_page););  // <---------------!!!!    ----->>>>  
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( function ReLoad() {  );// <---------------!!!!    input |+++++++++++++ OPEN 
set(var start_page = addAPIKEY(location.href););  // <---------------!!!!    ----->>>>  
output(console.error("START PAGE SET TO ", start_page););  // <---------------!!!!    ----->>>>  
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( async function deleteChecked(user) {  );// <---------------!!!!    input--- |+++++++++++++ OPEN 
set(hitEndPoint(addAPIKEY("/api/remove-checked-credentials"), USER_ID, [], true););  // <---------------!!!!    ----->>>>  
output(console.error("remove-checked-credentials FileStates:"););  // <---------------!!!!    ----->>>>  
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( async function loadJsonFile() {  );// <---------------!!!!    input--- |+++++++++++++ OPEN 
branch( try {  );// <---------------!!!!    branch |+++++++++++++ OPEN 
set(const response = await fetch(JSON_FILE););  // <---------------!!!!    ----->>>>  
output(if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`););  // <---------------!!!!    ----->>>>  
set(data = await response.json(););  // <---------------!!!!    ----->>>>  
set(window.credentials = data;);  // <---------------!!!!    ----->>>>  
end(return true;);  // <---------------!!!!    ----->>>>  
path( } catch (error) {  );// <---------------!!!!    path... |+++++++++++++ BRIDGE 
output(console.error(`INFO Error loading JSON:`, error););  // <---------------!!!!    ----->>>>  
set(showLineInfo(););  // <---------------!!!!    ----->>>>  
set(sessionStorage.setItem("sessionAIprocessing", "false"););  // <---------------!!!!    ----->>>>  
end(return false;);  // <---------------!!!!    ----->>>>  
bend( }  );// <---------------!!!!    bend |+++++++++++++ CLOSE 
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( function updateChecked(user) {  );// <---------------!!!!    input |+++++++++++++ OPEN 
set(hitEndPoint("/api/update-checked-credentials", USER_ID, [], true););  // <---------------!!!!    ----->>>>  
output(console.error("update-checked-credentials FileStates:", FileStates););  // <---------------!!!!    ----->>>>  
set(AI_process_Data(););  // <---------------!!!!    ----->>>>  
process( setTimeout(function () {  );// <---------------!!!!    process |+++++++++++++ OPEN 
set(location.reload(););  // <---------------!!!!    ----->>>>  
process( }, 1000);  );// <---------------!!!!    tag |+++++++++++++ CLOSE 
end( }  );// <---------------!!!!    end |+++++++++++++ CLOSE 
input( window.onload = async function init() {  );// <---------------!!!!    input--- |+++++++++++++ OPEN 
end(return;);  // <---------------!!!!    ----->>>>  
end( };  );// <---------------!!!!    end |+++++++++++++ CLOSE 
process(  );// <---------------!!!!    Export  Date: 12:44:54 PM - 22:Feb:2025... 
